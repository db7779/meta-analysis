# loading the necessary libraries
library(meta)
library(metafor)

# creating the variables (data can be found on the meta-analysis paper or can be 
# extracted from the papers used for the meta-analysis)
trialname<-c("Daunoravciene 2018","Dehem 2019","Hesse 2014","Sale 2014","Wolf 2015")
n_robotic <- c(17,23,25,26,47)
n_usualcare <- c(17,22,25,27,45)
mean_rob <- c(45.17,51.9,25.7,35.46,43.6)
mean_uc <- c(41.76,42.4,32.3,23.96,42.9)
sd_rob <- c(18.48,30.9,16.5,12.24,42.9)
sd_uc <- c(15.41,32.6,19.1,17.51,41.3)

# creating the dataframe
data <- data.frame(trialname,n_robotic,n_usualcare,mean_rob,mean_uc,sd_rob,sd_uc)
head(data)

# building the metaanalysis model
meta1<-metacont(n.e=n_robotic,mean.e=mean_rob,sd.e=sd_rob,n.c=n_usualcare,
                mean.c =mean_uc,sd.c=sd_uc, sm="SMD",data=data, title="Forest plot: Comparison of the effect of robotic-assisted therapy and usual care on motor control at post-treatment",
                comb.random=TRUE, studlab = trialname
)
# summarizing the model
summary(meta1)

# adding prediction intervals, with Hartung and Knapp adjustment of test statistics
# and confidence intervals, since it usually outperforms DerSimonian-Laird method 
# in the context of random effects models in meta-analyses (unless number of studies 
# is <=5 with varying sample sizes). We choose restricted maximum likelihood for
# the estimation the between-study variance tau

meta2<-update(meta1,prediction=TRUE,hakn=TRUE,method.tau="REML")
summary(meta2)

# creating forest plots for easier inspection of our results
# the forest plot we produce is similar to the ones generated by 
# Cochraneâ€™s Review Manager 5 (layout = "RevMan5"). It contains prediction interval
# and both random and fixed effects
# we also save the figure as a PNG in our working directory
png(file = "forestplot.png", width = 3800, height = 1400, res = 300)
forest(meta1,studlab=trialname,fontsize=12,fs.study.label=10,fs.study=10,
       prediction=TRUE,layout = "RevMan5")
dev.off()

# funnel plot for the random effects model, contour enhanced
png(file = "funnelplot.png", width = 3800, height = 1400, res = 300)
funnel(meta1,contour.levels=c(0.90,0.95,0.99),comb.random=TRUE)
dev.off()


# Creating a drapery plot in order to see the relationships
# instead of only calculating the 95% confidence interval, p-value functions 
# provide a continuous curve which shows the confidence interval for varying 
# values of p, preventing researchers from relying on a fixed significance threshold
# In a drapery plot, a confidence curve is plotted for each study, as well as 
# for the average effect. The x-axis shows the effect size metric, and the y-axis 
# the assumed p-value

# in the following plot, common (fixed) effects model is expressed with the blue 
# line and random effects model with the red line
png(file = "draperyplot.png", width = 3800, height = 1400, res = 300)
drapery(meta1, 
        labels = "studlab",
        type = "pval", 
        legend = FALSE#,pos.legend="center" if legend=TRUE
        )
dev.off()
